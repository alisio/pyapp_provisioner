name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install ansible ansible-lint yamllint

      - name: Run ansible-lint
        run: ansible-lint .

      - name: Run yamllint
        run: yamllint .

  molecule:
    name: Molecule Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - ubuntu2204
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install molecule molecule-plugins[docker] ansible ansible-lint
          ansible-galaxy install -r molecule/default/requirements.yml

      - name: Run Molecule tests
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

  galaxy:
    name: Galaxy Import Test
    runs-on: ubuntu-latest
    needs: [lint, molecule]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: pip install ansible

      - name: Test Galaxy import
        run: |
          ansible-galaxy role build .
          # Note: Actual import requires Galaxy API key
          # ansible-galaxy role import --token ${{ secrets.GALAXY_API_KEY }} USERNAME python_app
